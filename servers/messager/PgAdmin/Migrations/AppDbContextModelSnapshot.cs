// <auto-generated />
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace PgAdmin.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("PGAdminDAL.Model.CarRoles", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("CarRoles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Role = "Cargo Van"
                        },
                        new
                        {
                            Id = 2,
                            Role = "Passenger Van"
                        },
                        new
                        {
                            Id = 3,
                            Role = "Small Flatbed Truck"
                        },
                        new
                        {
                            Id = 4,
                            Role = "Box Truck"
                        },
                        new
                        {
                            Id = 5,
                            Role = "Tanker Truck"
                        },
                        new
                        {
                            Id = 6,
                            Role = "Large Box Truck"
                        },
                        new
                        {
                            Id = 7,
                            Role = "Small Curtain-Side Truck"
                        },
                        new
                        {
                            Id = 8,
                            Role = "Container Truck"
                        },
                        new
                        {
                            Id = 9,
                            Role = "Large Box Truck Container"
                        });
                });

            modelBuilder.Entity("PGAdminDAL.Model.CarriersCompany", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("Avatar")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("ConfirmationEmail")
                        .HasColumnType("boolean");

                    b.Property<string>("IdDirector")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("NameDirector")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("PhoneConfirmation")
                        .HasColumnType("boolean");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double>("Rating")
                        .HasColumnType("double precision");

                    b.Property<string>("Registration")
                        .IsRequired()
                        .HasColumnType("text");

                    b.PrimitiveCollection<List<string>>("ReviewsId")
                        .IsRequired()
                        .HasColumnType("text[]");

                    b.Property<int>("ReviewsNumbers")
                        .HasColumnType("integer");

                    b.Property<int>("SuccessfulTransportation")
                        .HasColumnType("integer");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("TransportationNumber")
                        .HasColumnType("integer");

                    b.Property<string>("TransportationOnline")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("TrucksNumber")
                        .HasColumnType("integer");

                    b.Property<int>("WorkersNumber")
                        .HasColumnType("integer");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("CarriersCompanies");
                });

            modelBuilder.Entity("PGAdminDAL.Model.CarriersDirector", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("Avatar")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ConcurrencyStamp")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("EmailConfirmation")
                        .HasColumnType("boolean");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("HashPassword")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("IdCompany")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("PhoneNumberConfirmation")
                        .HasColumnType("boolean");

                    b.Property<int>("SuccessfulTransportation")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("CarriersDirectors");
                });

            modelBuilder.Entity("PGAdminDAL.Model.CarriersWorkers", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("Avatar")
                        .IsRequired()
                        .HasColumnType("text");

                    b.PrimitiveCollection<List<string>>("ChatsId")
                        .IsRequired()
                        .HasColumnType("text[]");

                    b.Property<int>("ChatsNumber")
                        .HasColumnType("integer");

                    b.Property<string>("CompanyKey")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ConcurrencyStamp")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("EmailConfirmation")
                        .HasColumnType("boolean");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("HashPassword")
                        .IsRequired()
                        .HasColumnType("text");

                    b.PrimitiveCollection<List<string>>("IdCompany")
                        .IsRequired()
                        .HasColumnType("text[]");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("PhoneNumberConfirmation")
                        .HasColumnType("boolean");

                    b.Property<string>("PrivateKey")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PublicKey")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double>("Rating")
                        .HasColumnType("double precision");

                    b.PrimitiveCollection<List<string>>("ReviewsId")
                        .IsRequired()
                        .HasColumnType("text[]");

                    b.Property<int>("ReviewsNumbers")
                        .HasColumnType("integer");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("SuccessfulTransportation")
                        .HasColumnType("integer");

                    b.PrimitiveCollection<List<string>>("TransportationId")
                        .IsRequired()
                        .HasColumnType("text[]");

                    b.PrimitiveCollection<List<string>>("TruckId")
                        .IsRequired()
                        .HasColumnType("text[]");

                    b.Property<int>("TruckNumber")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("CarriersWorkers");
                });

            modelBuilder.Entity("PGAdminDAL.Model.CarsCompany", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("Brand")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("HorsePower")
                        .HasColumnType("integer");

                    b.Property<string>("IdCompany")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("NumberTransportation")
                        .HasColumnType("integer");

                    b.Property<string>("Numbers")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("WorkerId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("CarsCompanies");
                });

            modelBuilder.Entity("PGAdminDAL.Model.Review", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("IdPeople")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double>("Rating")
                        .HasColumnType("double precision");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("TypeWork")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Сontext")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Reviews");
                });

            modelBuilder.Entity("PGAdminDAL.Model.ReviewCompany", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("IdCompany")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double>("Rating")
                        .HasColumnType("double precision");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Сontext")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("ReviewCompanies");
                });

            modelBuilder.Entity("PGAdminDAL.Model.Roles", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Role = "junior logistician"
                        },
                        new
                        {
                            Id = 2,
                            Role = "logistician"
                        },
                        new
                        {
                            Id = 3,
                            Role = "senior logistician"
                        },
                        new
                        {
                            Id = 4,
                            Role = "director"
                        },
                        new
                        {
                            Id = 5,
                            Role = "Admin"
                        });
                });

            modelBuilder.Entity("PGAdminDAL.Model.ShippersCompany", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("Avatar")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("ConfirmationEmail")
                        .HasColumnType("boolean");

                    b.Property<string>("NameDirector")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("PhoneConfirmation")
                        .HasColumnType("boolean");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double>("Rating")
                        .HasColumnType("double precision");

                    b.Property<string>("Registration")
                        .IsRequired()
                        .HasColumnType("text");

                    b.PrimitiveCollection<List<string>>("ReviewsId")
                        .IsRequired()
                        .HasColumnType("text[]");

                    b.Property<int>("ReviewsNumbers")
                        .HasColumnType("integer");

                    b.Property<int>("SuccessfulTransportation")
                        .HasColumnType("integer");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("TransportationNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("TransportationOnline")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("WorkersNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("idDirector")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("ShippersCompanies");
                });

            modelBuilder.Entity("PGAdminDAL.Model.ShippersDirector", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("Avatar")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ConcurrencyStamp")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("EmailConfirmation")
                        .HasColumnType("boolean");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("HashPassword")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("IdCompany")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("PhoneNumberConfirmation")
                        .HasColumnType("boolean");

                    b.Property<int>("SuccessfulTransportation")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("ShippersDirectors");
                });

            modelBuilder.Entity("PGAdminDAL.Model.ShippersWorkers", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("Avatar")
                        .IsRequired()
                        .HasColumnType("text");

                    b.PrimitiveCollection<List<string>>("ChatsId")
                        .IsRequired()
                        .HasColumnType("text[]");

                    b.Property<int>("ChatsNumber")
                        .HasColumnType("integer");

                    b.Property<string>("CompanyKey")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ConcurrencyStamp")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("EmailConfirmation")
                        .HasColumnType("boolean");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("HashPassword")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("IdCompany")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("PhoneNumberConfirmation")
                        .HasColumnType("boolean");

                    b.Property<string>("PrivateKey")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PublicKey")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double>("Rating")
                        .HasColumnType("double precision");

                    b.PrimitiveCollection<List<string>>("ReviewsId")
                        .IsRequired()
                        .HasColumnType("text[]");

                    b.Property<int>("ReviewsNumbers")
                        .HasColumnType("integer");

                    b.Property<int>("SuccessfulTransportation")
                        .HasColumnType("integer");

                    b.PrimitiveCollection<List<string>>("TransportationId")
                        .IsRequired()
                        .HasColumnType("text[]");

                    b.Property<int>("ransportationNumber")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("ShippersWorkers");
                });

            modelBuilder.Entity("PGAdminDAL.Model.Transportation", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("From")
                        .IsRequired()
                        .HasColumnType("text");

                    b.PrimitiveCollection<double[]>("FromCoordinates")
                        .IsRequired()
                        .HasColumnType("double precision[]");

                    b.Property<string>("IdCarriersCompany")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("IdCarriersWorkers")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("IdShippersCompany")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("IdShippersWorkers")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("IdTruck")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("TrackNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Where")
                        .IsRequired()
                        .HasColumnType("text");

                    b.PrimitiveCollection<double[]>("WhereCoordinates")
                        .IsRequired()
                        .HasColumnType("double precision[]");

                    b.HasKey("Id");

                    b.ToTable("Transportations");
                });
#pragma warning restore 612, 618
        }
    }
}
